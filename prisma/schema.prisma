generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ATIVO
  INATIVO
}

enum TipoPasta {
  PAROQUIA
  PADRE
  FINANCAS
  MONTAGEM
  POS
  PALESTRA
  FICHAS
}

enum TipoTransacao {
  DEPOSITO
  DESPESA
  INVESTIMENTO
}

enum CategoriaTransacao {
  COMIDA
  TRANSPORTE
  PATROCINIO
  DOACAO
  BINGO
  OUTRO
}

enum MetodoPagamentoTransacao {
  DINHEIRO
  CARTAO_CREDITO
  CARTAO_DEBITO
  PIX
  TRANSFERENCIA_BANCARIA
  BOLETO_BANCARIO
  OUTRO
}

enum Escolaridade {
  ENSINO_FUNDAMENTAL
  ENSINO_FUNDAMENTAL_INCOMPLETO
  ENSINO_MEDIO
  ENSINO_MEDIO_INCOMPLETO
  ENSINO_SUPERIOR_INCOMPLETO
  ENSINO_SUPERIOR_COMPLETO
  POS_GRADUACAO
  MESTRADO
  DOUTORADO
  POS_DOUTORADO
}

enum Sacramentos {
  BATISMO
  CRISMA
  EUCARISTIA
  NENHUM
}

enum Pastoral {
  CATEQUESE
  LITURGIA
  MUSICA
  JOVENS
  FAMILIA
  SAUDE
  COMUNICACAO
  CARIDADE
  POVO_DA_RUA
  OUTRO
}

enum Equipes {
  ANIMACAO
  VIGILIA_PAROQUIAL
  LITURGIA
  CANTO
  ESTACIONAMENTO
  VISITACAO
  LANCHE
  COZINHA
  SALA
  FAXINA
  ED_PALESTRA
  ED_POS
  ED_MONTAGEM
  ED_FINANCAS
  ED_FICHAS
  CIRCULO
  GRAFICA
  MINI_MERCADO
  CARAVANA
  NENHUMA
  CG
  ESPIRITUALIZADORA
  PROVER
}

enum TipoEcontro {
  PRIMEIRA_ETAPA
  SEGUNDA_ETAPA
  CARAVANA
}

enum FuncaoEquipe {
  COORDENADOR
  EQUIPISTA
  ED
  APOIO
}

enum AvaliacaoEquipe {
  NEGATIVA
  POSITIVA
  NEUTRA
}

enum CoresCirculos {
  VERDE
  AMARELO
  VERMELHO
  AZUL
  ROSA
  LARANJA
}

// Modelo para transações
model Transaction {
  id              String                   @id @default(uuid())
  nome            String
  tipo            TipoTransacao
  valor           Float
  categoria       CategoriaTransacao
  descricao       String?
  metodoPagamento MetodoPagamentoTransacao
  date            DateTime
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
  igreja          Igreja                   @relation(fields: [igrejaId], references: [id])
  igrejaId        String
}

model Ficha {
  id String @id @default(uuid())

  //informações em comum
  nomePastaFichas  String
  dataRecebimento  DateTime
  endereco         String
  igrejaFrequenta  String?
  pastoral         String?
  observacoes      String?
  anoEncontro      String
  corCirculoOrigem CoresCirculos

  // Pessoa principal (jovem solteiro ou um dos membros do casal)
  nomePrincipal           String
  emailPrincipal          String        @unique
  telefonePrincipal       String
  dataNascimentoPrincipal DateTime
  naturalidadePrincipal   String
  apelidoPrincipal        String?
  filiacaoPai             String?
  filiacaoMae             String?
  escolaridade            Escolaridade?
  sacramentos             Sacramentos?

  // Pessoa secundária (parceiro(a) no caso de um casal)
  nomeSecundario           String? // Opcional para solteiros
  emailSecundario          String?   @unique
  telefoneSecundario       String?
  dataNascimentoSecundario DateTime?
  naturalidadeSecundario   String?
  apelidoSecundario        String?

  // por default
  status            Status        @default(ATIVO)
  equipeAtual       Equipes       @default(NENHUMA)
  funcaoEquipeAtual FuncaoEquipe  @default(EQUIPISTA)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  igreja            Igreja        @relation(fields: [igrejaId], references: [id])
  igrejaId          String
  FichaEquipe       FichaEquipe[]

  // Campo para indicar o tipo da ficha
  tipoFicha TipoFicha @default(JOVEM)
}

// Enum para identificar o tipo da ficha
enum TipoFicha {
  JOVEM
  CASAL
}

model FichaEquipe {
  id           String          @id @default(uuid())
  equipe       Equipes
  ano          String
  funcao       FuncaoEquipe
  avaliacao    AvaliacaoEquipe
  tipoEncontro TipoEcontro     @default(PRIMEIRA_ETAPA)
  observacoes  String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  ficha        Ficha           @relation(fields: [fichaId], references: [id])
  fichaId      String
}

// Modelo para Igreja
model Igreja {
  id          String            @id @default(uuid())
  nome        String
  cnpj        String            @unique
  email       String            @unique
  senha       String
  telefone    String
  endereco    String
  cidade      String
  estado      String
  cep         String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  User        EquipeDirigente[]
  Transaction Transaction[]
  status      Status            @default(ATIVO)
  pasta       TipoPasta         @default(PAROQUIA)
  Fichas      Ficha[]
}

// Modelo para usuarios da igreja
model EquipeDirigente {
  id        String    @id @default(uuid())
  nome      String
  email     String    @unique
  senha     String
  telefone  String
  ano       String
  igreja    Igreja    @relation(fields: [igrejaId], references: [id])
  igrejaId  String
  status    Status    @default(INATIVO)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  pasta     TipoPasta
}
